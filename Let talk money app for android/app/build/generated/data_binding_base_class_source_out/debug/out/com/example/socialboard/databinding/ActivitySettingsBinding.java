// Generated by view binder compiler. Do not edit!
package com.example.socialboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.socialboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText changeEmail;

  @NonNull
  public final EditText changeName;

  @NonNull
  public final Button logoutBtn;

  @NonNull
  public final Button saveChanges;

  @NonNull
  public final TextView textView3;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView, @NonNull EditText changeEmail,
      @NonNull EditText changeName, @NonNull Button logoutBtn, @NonNull Button saveChanges,
      @NonNull TextView textView3) {
    this.rootView = rootView;
    this.changeEmail = changeEmail;
    this.changeName = changeName;
    this.logoutBtn = logoutBtn;
    this.saveChanges = saveChanges;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeEmail;
      EditText changeEmail = rootView.findViewById(id);
      if (changeEmail == null) {
        break missingId;
      }

      id = R.id.changeName;
      EditText changeName = rootView.findViewById(id);
      if (changeName == null) {
        break missingId;
      }

      id = R.id.logoutBtn;
      Button logoutBtn = rootView.findViewById(id);
      if (logoutBtn == null) {
        break missingId;
      }

      id = R.id.saveChanges;
      Button saveChanges = rootView.findViewById(id);
      if (saveChanges == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, changeEmail, changeName,
          logoutBtn, saveChanges, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
